@tool
extends TwitchData

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

class_name TwitchCreateExtensionSecret
	


## 
## #/components/schemas/CreateExtensionSecretResponse
class Response extends TwitchData:

	## A list that contains the newly added secrets.
	@export var data: Array[TwitchExtensionSecret]:
		set(val): 
			data = val
			track_data(&"data", val)
	var response: BufferedHTTPClient.ResponseData
	
	
	## Constructor with all required fields.
	static func create(_data: Array[TwitchExtensionSecret]) -> Response:
		var response: Response = Response.new()
		response.data = _data
		return response
	
	
	static func from_json(d: Dictionary) -> Response:
		var result: Response = Response.new()
		if d.get("data", null) != null:
			for value in d["data"]:
				result.data.append(TwitchExtensionSecret.from_json(value))
		return result
	


## All optional parameters for TwitchAPI.create_extension_secret
## #/components/schemas/CreateExtensionSecretOpt
class Opt extends TwitchData:

	## The amount of time, in seconds, to delay activating the secret. The delay should provide enough time for instances of the extension to gracefully switch over to the new secret. The minimum delay is 300 seconds (5 minutes). The default is 300 seconds.
	@export var delay: int:
		set(val): 
			delay = val
			track_data(&"delay", val)
	
	
	
	## Constructor with all required fields.
	static func create() -> Opt:
		var opt: Opt = Opt.new()
		return opt
	
	
	static func from_json(d: Dictionary) -> Opt:
		var result: Opt = Opt.new()
		if d.get("delay", null) != null:
			result.delay = d["delay"]
		return result
	