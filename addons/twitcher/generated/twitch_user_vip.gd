@tool
extends TwitchData

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

## 
## #/components/schemas/UserVip
class_name TwitchUserVip
	
## An ID that uniquely identifies the VIP user.
@export var user_id: String:
	set(val): 
		user_id = val
		track_data(&"user_id", val)

## The user’s display name.
@export var user_name: String:
	set(val): 
		user_name = val
		track_data(&"user_name", val)

## The user’s login name.
@export var user_login: String:
	set(val): 
		user_login = val
		track_data(&"user_login", val)
var response: BufferedHTTPClient.ResponseData


## Constructor with all required fields.
static func create(_user_id: String, _user_name: String, _user_login: String) -> TwitchUserVip:
	var twitch_user_vip: TwitchUserVip = TwitchUserVip.new()
	twitch_user_vip.user_id = _user_id
	twitch_user_vip.user_name = _user_name
	twitch_user_vip.user_login = _user_login
	return twitch_user_vip


static func from_json(d: Dictionary) -> TwitchUserVip:
	var result: TwitchUserVip = TwitchUserVip.new()
	if d.get("user_id", null) != null:
		result.user_id = d["user_id"]
	if d.get("user_name", null) != null:
		result.user_name = d["user_name"]
	if d.get("user_login", null) != null:
		result.user_login = d["user_login"]
	return result
