@tool
extends TwitchData

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

class_name TwitchAddBlockedTerm
	


## 
## #/components/schemas/AddBlockedTermBody
class Body extends TwitchData:

	## The word or phrase to block from being used in the broadcasterâ€™s chat room. The term must contain a minimum of 2 characters and may contain up to a maximum of 500 characters.  
	##   
	## Terms may include a wildcard character (\*). The wildcard character must appear at the beginning or end of a word or set of characters. For example, \*foo or foo\*.  
	##   
	## If the blocked term already exists, the response contains the existing blocked term.
	@export var text: String:
		set(val): 
			text = val
			track_data(&"text", val)
	var response: BufferedHTTPClient.ResponseData
	
	
	## Constructor with all required fields.
	static func create(_text: String) -> Body:
		var body: Body = Body.new()
		body.text = _text
		return body
	
	
	static func from_json(d: Dictionary) -> Body:
		var result: Body = Body.new()
		if d.get("text", null) != null:
			result.text = d["text"]
		return result
	


## 
## #/components/schemas/AddBlockedTermResponse
class Response extends TwitchData:

	## A list that contains the single blocked term that the broadcaster added.
	@export var data: Array[TwitchBlockedTerm]:
		set(val): 
			data = val
			track_data(&"data", val)
	var response: BufferedHTTPClient.ResponseData
	
	
	## Constructor with all required fields.
	static func create(_data: Array[TwitchBlockedTerm]) -> Response:
		var response: Response = Response.new()
		response.data = _data
		return response
	
	
	static func from_json(d: Dictionary) -> Response:
		var result: Response = Response.new()
		if d.get("data", null) != null:
			for value in d["data"]:
				result.data.append(TwitchBlockedTerm.from_json(value))
		return result
	