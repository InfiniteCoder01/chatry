@tool
extends TwitchData

# CLASS GOT AUTOGENERATED DON'T CHANGE MANUALLY. CHANGES CAN BE OVERWRITTEN EASILY.

## 
## #/components/schemas/DropsEntitlementUpdated
class_name TwitchDropsEntitlementUpdated
	
## A string that indicates whether the status of the entitlements in the `ids` field were successfully updated. Possible values are:  
##   
## * INVALID\_ID — The entitlement IDs in the `ids` field are not valid.
## * NOT\_FOUND — The entitlement IDs in the `ids` field were not found.
## * SUCCESS — The status of the entitlements in the `ids` field were successfully updated.
## * UNAUTHORIZED — The user or organization identified by the user access token is not authorized to update the entitlements.
## * UPDATE\_FAILED — The update failed. These are considered transient errors and the request should be retried later.
@export var status: String:
	set(val): 
		status = val
		track_data(&"status", val)

## The list of entitlements that the status in the `status` field applies to.
@export var ids: Array[String]:
	set(val): 
		ids = val
		track_data(&"ids", val)
var response: BufferedHTTPClient.ResponseData


## Constructor with all required fields.
static func create(_status: String, _ids: Array[String]) -> TwitchDropsEntitlementUpdated:
	var twitch_drops_entitlement_updated: TwitchDropsEntitlementUpdated = TwitchDropsEntitlementUpdated.new()
	twitch_drops_entitlement_updated.status = _status
	twitch_drops_entitlement_updated.ids = _ids
	return twitch_drops_entitlement_updated


static func from_json(d: Dictionary) -> TwitchDropsEntitlementUpdated:
	var result: TwitchDropsEntitlementUpdated = TwitchDropsEntitlementUpdated.new()
	if d.get("status", null) != null:
		result.status = d["status"]
	if d.get("ids", null) != null:
		for value in d["ids"]:
			result.ids.append(value)
	return result
